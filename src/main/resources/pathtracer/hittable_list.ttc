def hittable_list() = {
    type = 1,
    objects[0]
}

def hittable_list(object) = {
    type = 1,
    objects[1] = object
}

def hittable_list_clear(self) = self.objects = []

def hittable_list_add(self, object) = (
    def tmp[self.objects.size + 1]
    for [0, self.objects.size] -> i
        tmp[i] = self.objects[i]
    tmp[self.objects.size] = object
    self.objects = tmp
)

def hittable_list_hit(self, r, ray_tmin, ray_tmax, rec) = (
    def temp_rec = {}
    def hit_anything = 0
    def closest_so_far = ray_tmax

    for [0, self.objects.size] -> i (
        if [hittable_hit(self.objects[i], r, ray_tmin, closest_so_far, temp_rec)] (
            hit_anything = 1
            closest_so_far = temp_rec.t
            hit_record_copy(rec, temp_rec)
        )
    )

    hit_anything
)
